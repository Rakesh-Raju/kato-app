{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\The Admin\\\\Desktop\\\\swag\\\\src\\\\components\\\\Parent.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport ParentList from \"./ParentList\";\n\nclass Parent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onParentClick = event => {\n      event.preventDefault();\n      this.props.onClick(this.state.parentList.id);\n    };\n\n    this.state = {\n      parentList: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/user').then(response => {\n      // create an array of contacts only with relevant data\n      const parents = response.data.map(c => {\n        return {\n          id: c.id,\n          first_name: c.first_name,\n          last_name: c.last_name,\n          email: c.email // password: c.password,\n          // school: c.school,\n          // grade: c.grade,\n          // created_at: c.created_at,\n          // update_at: c.update_at\n\n        };\n      }); // create a new \"State\" object without mutating\n      // the original State object.\n\n      const newState = Object.assign({}, this.state, {\n        parentList: parents\n      }); // store the new state object in the component's state\n\n      this.setState(newState);\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" Parent's List \"), React.createElement(ParentList, {\n      parentList: this.state.parentList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Parent;","map":{"version":3,"sources":["C:/Users/The Admin/Desktop/swag/src/components/Parent.js"],"names":["React","Component","axios","ParentList","Parent","constructor","props","onParentClick","event","preventDefault","onClick","state","parentList","id","componentDidMount","fetch","then","response","parents","data","map","c","first_name","last_name","email","newState","Object","assign","setState","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAE3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,aAPmB,GAOHC,KAAK,IAAI;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKH,KAAL,CAAWI,OAAX,CAAmB,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,EAAzC;AACH,KAVkB;;AAEf,SAAKF,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAODE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACd;AACA,YAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,CAAC,IAAI;AACnC,eAAO;AACHR,UAAAA,EAAE,EAAEQ,CAAC,CAACR,EADH;AAEHS,UAAAA,UAAU,EAAED,CAAC,CAACC,UAFX;AAGHC,UAAAA,SAAS,EAAEF,CAAC,CAACE,SAHV;AAIHC,UAAAA,KAAK,EAAEH,CAAC,CAACG,KAJN,CAKH;AACA;AACA;AACA;AACA;;AATG,SAAP;AAWH,OAZe,CAAhB,CAFc,CAgBd;AACA;;AACA,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKhB,KAAvB,EAA8B;AAC3CC,QAAAA,UAAU,EAAEM;AAD+B,OAA9B,CAAjB,CAlBc,CAsBd;;AAEA,WAAKU,QAAL,CAAcH,QAAd;AACH,KA1BL,EA2BKI,KA3BL,CA2BWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CA3BpB;AA4BH;;AAGDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAI,KAAKtB,KAAL,CAAWC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AArD0B;;AAwD/B,eAAeR,MAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport axios from \"axios\";\n\nimport ParentList from \"./ParentList\";\n\nclass Parent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            parentList: []\n        };\n    }\n\n    onParentClick = event => {\n        event.preventDefault();\n        this.props.onClick(this.state.parentList.id);\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/user')\n            .then(response => {\n                // create an array of contacts only with relevant data\n                const parents = response.data.map(c => {\n                    return {\n                        id: c.id,\n                        first_name: c.first_name,\n                        last_name: c.last_name,\n                        email: c.email\n                        // password: c.password,\n                        // school: c.school,\n                        // grade: c.grade,\n                        // created_at: c.created_at,\n                        // update_at: c.update_at\n                    };\n                });\n\n                // create a new \"State\" object without mutating\n                // the original State object.\n                const newState = Object.assign({}, this.state, {\n                    parentList: parents\n                });\n\n                // store the new state object in the component's state\n\n                this.setState(newState);\n            })\n            .catch(error => console.log(error));\n    }\n\n\n    render() {\n        return (\n            <div>\n                <span> Parent's List </span>\n                <ParentList parentList = {this.state.parentList} />\n            </div>\n        );\n    }\n}\n\nexport default Parent;"]},"metadata":{},"sourceType":"module"}